[{"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\App.js":"2","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\auth.js":"4","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Cart.js":"5","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Home.js":"6","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\DropOff.js":"7","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Navbar.js":"8","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Checkout.js":"9","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Login.js":"10","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\ProductDetail.js":"11","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Products.js":"12","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Discounts.js":"13","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\settings.js":"14","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\NewArrivals.js":"15","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\localStorage.js":"16","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\sessionStorage.js":"17"},{"size":546,"mtime":1619627668000,"results":"18","hashOfConfig":"19"},{"size":1813,"mtime":1620250275857,"results":"20","hashOfConfig":"19"},{"size":381,"mtime":1620277576556,"results":"21","hashOfConfig":"19"},{"size":1469,"mtime":1620230720212,"results":"22","hashOfConfig":"19"},{"size":4436,"mtime":1619627668000,"results":"23","hashOfConfig":"19"},{"size":1030,"mtime":1619627668000,"results":"24","hashOfConfig":"19"},{"size":4160,"mtime":1619627668000,"results":"25","hashOfConfig":"19"},{"size":3382,"mtime":1620276433025,"results":"26","hashOfConfig":"19"},{"size":16549,"mtime":1619627668000,"results":"27","hashOfConfig":"19"},{"size":2365,"mtime":1619627668000,"results":"28","hashOfConfig":"19"},{"size":3576,"mtime":1619627668000,"results":"29","hashOfConfig":"19"},{"size":7344,"mtime":1619627668000,"results":"30","hashOfConfig":"19"},{"size":3328,"mtime":1620282818184,"results":"31","hashOfConfig":"19"},{"size":138,"mtime":1620238340059,"results":"32","hashOfConfig":"19"},{"size":3768,"mtime":1620282859262,"results":"33","hashOfConfig":"19"},{"size":1245,"mtime":1619627668000,"results":"34","hashOfConfig":"19"},{"size":1257,"mtime":1619627668000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"llut8z",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\index.js",[],["76","77"],"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\App.js",["78"],"import {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n  useLocation,\n} from \"react-router-dom\";\nimport { ProvideAuth } from \"../auth\";\nimport Cart from \"./Cart\";\nimport Checkout from \"./Checkout\";\nimport DropOff from \"./DropOff\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Navbar from \"./Navbar\";\nimport ProductDetail from \"./ProductDetail\";\nimport Products from \"./Products\";\n\nfunction CovidResponseSection() {\n  const location = useLocation();\n\n  if (location.pathname === \"/dropoff\") return null;\n\n  return (\n    <div className=\"flex bg-red-600 text-white justify-between px-2 py-0.5 font-semibold text-sm\">\n      <div>JU</div>\n      <div>\n        {/* <Link to=\"/dropoff\" className=\"hover:border-b hover:border-white\">\n          Find a drop-off station near me\n        </Link> */}\n        Take care and stay safe.\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div>\n      <ProvideAuth>\n        <Router>\n          <Navbar />\n          <div style={{ minWidth: \"800px\" }}>\n            <CovidResponseSection />\n            <Switch>\n              <Route path=\"/products/:id\">\n                <ProductDetail />\n              </Route>\n              <Route path=\"/products\">\n                <Products />\n              </Route>\n              <Route path=\"/cart\">\n                <Cart />\n              </Route>\n              <Route path=\"/checkout\">\n                <Checkout />\n              </Route>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/dropoff\">\n                <DropOff />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </ProvideAuth>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\auth.js",[],"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Cart.js",["79"],"import React from \"react\";\nimport { ChevronDoubleRightOutline } from \"@graywolfai/react-heroicons\";\nimport { useSessionStorage } from \"../sessionStorage\";\nimport { Link } from \"react-router-dom\";\n\nconst { useEffect, useState } = React;\n\nfunction CartItemRow(props) {\n  const { idx, id, name, price, reducedPrice } = props;\n\n  const actualPrice = reducedPrice || price;\n\n  return (\n    <div className=\"table-row\">\n      <div className=\"table-cell text-right px-2\">{idx + 1}</div>\n      <div className=\"table-cell text-right px-2\">{id}</div>\n      <div className=\"table-cell text-left px-2\">{name}</div>\n      <div className=\"table-cell text-right px-2\">\n        â‚¹{\" \"}\n        {actualPrice.toLocaleString(\"en-IN\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction calculateTotalCost(products) {\n  return products.reduce(\n    (prev, curr) => prev + (curr.reducedPrice || curr.price),\n    0\n  );\n}\n\nfunction Cart() {\n  const [cart, setCart] = useSessionStorage(\"cart\", {\n    addedProductIds: {},\n    products: [],\n  });\n  const [totalCost, setTotalCost] = useState(null);\n\n  useEffect(() => {\n    setTotalCost(calculateTotalCost(cart.products));\n  }, [cart]);\n\n  if (!cart.products || !totalCost) {\n    return (\n      <div>\n        <div className=\"p-2 text-4xl\">Your cart is empty.</div>\n        <div className=\"p-2 text-sm font-semibold\">\n          Add products to your cart to see them here.\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-2\">\n      <div className=\"table w-full p-2\">\n        <div className=\"table-header-group text-sm\">\n          <div className=\"table-row font-semibold text-gray-600\">\n            <div className=\"table-cell text-right px-2 border-b-2\">#</div>\n            <div className=\"table-cell text-right px-2 border-b-2\">\n              Product Id\n            </div>\n            <div className=\"table-cell text-left px-2 border-b-2\">\n              Product Name\n            </div>\n            <div className=\"table-cell text-right px-2 border-b-2\">Price</div>\n          </div>\n        </div>\n        <div className=\"table-row-group text-sm\">\n          {cart.products.map((product, idx) => (\n            <CartItemRow key={product.id} idx={idx} {...product} />\n          ))}\n        </div>\n        <div className=\"table-footer-group\">\n          <div className=\"table-row font-semibold\">\n            <div className=\"table-cell text-right px-2 border-t-2\"></div>\n            <div className=\"table-cell text-right px-2 border-t-2\"></div>\n            <div className=\"table-cell text-left px-2 border-t-2\">Subtotal</div>\n            <div className=\"table-cell text-right px-2 border-t-2\">\n              â‚¹{\" \"}\n              {totalCost.toLocaleString(\"en-IN\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}\n            </div>\n          </div>\n          <div className=\"table-row font-semibold text-gray-600 text-sm\">\n            <div className=\"table-cell text-right px-2\"></div>\n            <div className=\"table-cell text-right px-2\"></div>\n            <div className=\"table-cell text-left px-2\">\n              Delivery and shipping charges\n            </div>\n            <div className=\"table-cell text-right px-2 text-green-600 font-bold\">\n              Free\n            </div>\n          </div>\n          <div className=\"table-row font-semibold text-lg\">\n            <div className=\"table-cell text-right px-2 border-t-2\"></div>\n            <div className=\"table-cell text-right px-2 border-t-2\"></div>\n            <div className=\"table-cell text-left px-2 border-t-2\">Total</div>\n            <div className=\"table-cell text-right px-2 border-t-2\">\n              â‚¹{\" \"}\n              {totalCost.toLocaleString(\"en-IN\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div className=\"flex mt-4 mb-4\">\n          <Link\n            to=\"/checkout\"\n            className=\"rounded-md p-1 flex border-2 border-blue-500 bg-blue-200 hover:bg-blue-500 hover:text-white font-medium\"\n          >\n            Continue and check out{\" \"}\n            <ChevronDoubleRightOutline className=\"h-4 w-4 ml-1 inline self-center\" />\n          </Link>\n        </div>\n      </div>\n      <div></div>\n    </div>\n  );\n}\n\nexport default Cart;\n","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Home.js",["80"],"import React from \"react\";\nimport { useLocalStorage } from \"../localStorage\";\nimport Discounts from \"./Discounts\";\nimport NewArrivals from \"./NewArrivals\";\n\nfunction Home() {\n  const [activity, setActivity] = useLocalStorage(\"activity\", {\n    viewNewArrivalsCount: 0,\n    viewDiscountedItemsCount: 0,\n  });\n\n  const renderBody = () => {\n    const { viewNewArrivalsCount, viewDiscountedItemsCount } = activity;\n\n    if (viewNewArrivalsCount > viewDiscountedItemsCount)\n      return (\n        <div>\n          <NewArrivals />\n          <Discounts />\n        </div>\n      );\n\n    if (viewNewArrivalsCount < viewDiscountedItemsCount)\n      return (\n        <div>\n          <Discounts />\n          <NewArrivals />\n        </div>\n      );\n\n    if (Math.random() < 0.5)\n      return (\n        <div>\n          <NewArrivals />\n          <Discounts />\n        </div>\n      );\n    else\n      return (\n        <div>\n          <Discounts />\n          <NewArrivals />\n        </div>\n      );\n  };\n\n  return renderBody();\n}\n\nexport default Home;\n","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\DropOff.js",[],"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Checkout.js",[],"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Login.js",[],"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\ProductDetail.js",["81"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useSessionStorage } from \"../sessionStorage\";\nimport SETTINGS from \"../settings\";\n\nconst { useEffect, useState } = React;\n\nfunction ProductDetailCard(props) {\n  const [cart, setCart] = useSessionStorage(\"cart\", {\n    addedProductIds: {},\n    products: [],\n  });\n\n  const {\n    id,\n    imageUrl,\n    name,\n    description,\n    isNewArrival,\n    price,\n    discountPercentage,\n    reducedPrice,\n    category,\n    footnote,\n  } = props.product;\n\n  const handleAddToCart = () => {\n    if (!cart.addedProductIds[id]) {\n      const cartCopy = { ...cart };\n      cartCopy.addedProductIds[id] = true;\n      cartCopy.products.push(props.product);\n      setCart(cartCopy);\n    }\n  };\n\n  const renderPriceSection = () => {\n    if (discountPercentage) {\n      return (\n        <>\n          <div className=\"text-xl text-gray-500 font-medium\">\n            â‚¹ {reducedPrice.toLocaleString(\"en-IN\")}\n          </div>\n          <div className=\"text-sm text-gray-500 p-1\">\n            <s>â‚¹ {price.toLocaleString(\"en-IN\")}</s>\n          </div>\n          <div className=\"text-sm font-semibold bg-green-300 rounded-sm p-1\">\n            {discountPercentage}% off\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"text-xl text-gray-500 font-medium\">\n            â‚¹ {price.toLocaleString(\"en-IN\")}\n          </div>\n        </>\n      );\n    }\n  };\n\n  const renderCategorySection = () => {\n    if (isNewArrival) {\n      return (\n        <>\n          <div className=\"text-sm font-medium text-blue-600\">\n            Flopkart exclusive\n          </div>\n          <div className=\"flex\">\n            <div className=\"text-sm bg-yellow-300 rounded-sm p-0.5\">\n              New in <span className=\"font-medium\">{category}</span>\n            </div>\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"text-sm\">\n            In <span className=\"font-medium\">{category}</span>\n          </div>\n        </>\n      );\n    }\n  };\n\n  return (\n    <div className=\"flex p-2 border-b-2 last:border-b-0\">\n      <div className=\"max-w-xs w-80\">\n        <img\n          src={`${SETTINGS.STATIC_ROOT_URL}/${imageUrl}`}\n          alt={name}\n          className=\"rounded-lg\"\n        />\n      </div>\n      <div className=\"flex-1 flex flex-col pl-4\">\n        <div className=\"font-semibold text-xl\">{name}</div>\n        <div className=\"flex\">{renderPriceSection()}</div>\n        {renderCategorySection()}\n        <div className=\"text-gray-700 text-sm mt-4\">{description}</div>\n        <div className=\"flex mt-4 mb-4\">\n          <button\n            onClick={() => handleAddToCart()}\n            className=\"rounded-md p-1 border-2 border-blue-500 hover:bg-blue-500 hover:text-white font-medium\"\n          >\n            Add to cart\n          </button>\n        </div>\n        <div className=\"text-sm text-gray-500\">{footnote}</div>\n      </div>\n    </div>\n  );\n}\n\nasync function fetchProduct(id, setProduct) {\n  const productRaw = await fetch(`${SETTINGS.BASE_URL}/products/${id}`);\n  const product = await productRaw.json();\n\n  setProduct(product);\n}\n\nfunction ProductDetail() {\n  const { id } = useParams();\n  const [product, setProduct] = useState(null);\n\n  useEffect(() => {\n    fetchProduct(id, setProduct);\n  }, [id]);\n\n  if (!product) {\n    return <div></div>;\n  }\n\n  return (\n    <div className=\"flex\">\n      <ProductDetailCard product={product} />\n    </div>\n  );\n}\n\nexport default ProductDetail;\n","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Products.js",["82"],"import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useLocalStorage } from \"../localStorage\";\nimport { useSessionStorage } from \"../sessionStorage\";\nimport SETTINGS from \"../settings\";\n\nconst { useEffect, useState } = React;\n\nfunction ProductSummaryCard(props) {\n  const [cart, setCart] = useSessionStorage(\"cart\", {\n    addedProductIds: {},\n    products: [],\n  });\n\n  const {\n    id,\n    imageUrl,\n    name,\n    isNewArrival,\n    price,\n    discountPercentage,\n    reducedPrice,\n    category,\n    footnote,\n  } = props.product;\n\n  const handleAddToCart = () => {\n    if (!cart.addedProductIds[id]) {\n      const cartCopy = { ...cart };\n      cartCopy.addedProductIds[id] = true;\n      cartCopy.products.push(props.product);\n      setCart(cartCopy);\n    }\n  };\n\n  const renderPriceSection = () => {\n    if (discountPercentage) {\n      return (\n        <>\n          <div className=\"text-xl text-gray-500 font-medium\">\n            â‚¹ {reducedPrice.toLocaleString(\"en-IN\")}\n          </div>\n          <div className=\"text-sm text-gray-500 p-1\">\n            <s>â‚¹ {price.toLocaleString(\"en-IN\")}</s>\n          </div>\n          <div className=\"text-sm font-semibold bg-green-300 rounded-sm p-1\">\n            {discountPercentage}% off\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"text-xl text-gray-500 font-medium\">\n            â‚¹ {price.toLocaleString(\"en-IN\")}\n          </div>\n        </>\n      );\n    }\n  };\n\n  const renderCategorySection = () => {\n    if (isNewArrival) {\n      return (\n        <>\n          <div className=\"text-sm font-medium text-blue-600\">\n            Flopkart exclusive\n          </div>\n          <div className=\"flex\">\n            <div className=\"text-sm bg-yellow-300 rounded-sm p-0.5\">\n              New in <span className=\"font-medium\">{category}</span>\n            </div>\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"text-sm\">\n            In <span className=\"font-medium\">{category}</span>\n          </div>\n        </>\n      );\n    }\n  };\n\n  return (\n    <div className=\"flex p-2 border-b-2 last:border-b-0\">\n      <div className=\"max-w-xs w-80\">\n        <img\n          src={`${SETTINGS.STATIC_ROOT_URL}/${imageUrl}`}\n          alt={name}\n          className=\"rounded-lg max-h-80 ml-auto mr-auto\"\n        />\n      </div>\n      <div className=\"flex-1 flex flex-col pl-4\">\n        <div className=\"font-semibold text-xl\">{name}</div>\n        <div className=\"flex\">{renderPriceSection()}</div>\n        {renderCategorySection()}\n        <div className=\"flex-1\" />\n        <div className=\"flex mt-4 mb-4\">\n          <Link\n            to={`/products/${id}`}\n            className=\"rounded-md p-1 border-2 border-blue-200 mr-4 bg-blue-200 hover:bg-blue-500 hover:border-blue-500 hover:text-white font-medium\"\n          >\n            View details\n          </Link>\n          <button\n            onClick={() => handleAddToCart()}\n            className=\"rounded-md p-1 border-2 border-blue-500 hover:bg-blue-500 hover:text-white font-medium\"\n          >\n            Add to cart\n          </button>\n        </div>\n        <div className=\"text-sm text-gray-500\">{footnote}</div>\n      </div>\n    </div>\n  );\n}\n\nasync function fetchProducts(\n  setProducts,\n  searchQuery,\n  filterNewArrivalsFlag,\n  filterDiscountedItemsFlag\n) {\n  const productsRaw = await fetch(`${SETTINGS.BASE_URL}/products`);\n  const products = await productsRaw.json();\n\n  const filteredProducts = products.filter((product) => {\n    if (filterNewArrivalsFlag && filterDiscountedItemsFlag)\n      return product.isNewArrival && product.discountPercentage;\n\n    if (filterNewArrivalsFlag) return product.isNewArrival;\n\n    if (filterDiscountedItemsFlag) return product.discountPercentage;\n\n    return true;\n  });\n\n  if (searchQuery) {\n    const searchMatches = filteredProducts.filter(\n      (product) =>\n        product.name.toLowerCase().includes(searchQuery) ||\n        product.description.toLowerCase().includes(searchQuery) ||\n        product.category.toLowerCase().includes(searchQuery)\n    );\n\n    setProducts(searchMatches);\n    return;\n  }\n\n  setProducts(filteredProducts);\n}\n\nfunction Products() {\n  const [products, setProducts] = useState(null);\n  const [filterNewArrivalsFlag, setFilterNewArrivalsFlag] = useState(false);\n  const [filterDiscountedItemsFlag, setFilterDiscountedItemsFlag] = useState(\n    false\n  );\n  const location = useLocation();\n  const searchQuery = new URLSearchParams(location.search).get(\n    \"productSearchQuery\"\n  );\n\n  const [activity, setActivity] = useLocalStorage(\"activity\", {\n    viewNewArrivalsCount: 0,\n    viewDiscountedItemsCount: 0,\n  });\n\n  const handleNewArrivalsChecked = () => {\n    if (!filterNewArrivalsFlag) {\n      setActivity((curr) => ({\n        ...curr,\n        viewNewArrivalsCount: curr.viewNewArrivalsCount + 1,\n      }));\n    }\n  };\n\n  const handleDiscountedItemsChecked = () => {\n    if (!filterDiscountedItemsFlag) {\n      setActivity((curr) => ({\n        ...curr,\n        viewDiscountedItemsCount: curr.viewDiscountedItemsCount + 1,\n      }));\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts(\n      setProducts,\n      searchQuery,\n      filterNewArrivalsFlag,\n      filterDiscountedItemsFlag\n    );\n  }, [searchQuery, filterNewArrivalsFlag, filterDiscountedItemsFlag]);\n\n  if (!products) {\n    return <div></div>;\n  }\n\n  const renderOptionalSearchSection = () => {\n    if (searchQuery) {\n      return (\n        <div className=\"p-2 font-semibold\">\n          Search results for{\" \"}\n          <span className=\"border-b-2 border-dashed border-red-600 p-1\">\n            {searchQuery}\n          </span>\n        </div>\n      );\n    }\n  };\n\n  const renderProductsList = () => {\n    if (products.length === 0) {\n      return (\n        <div>\n          <div className=\"p-2 text-4xl\">No products were found.</div>\n          <div className=\"p-2 text-sm font-medium\">\n            {searchQuery\n              ? \"Try another search, remove filters or check your internet.\"\n              : \"Remove filters or check your internet.\"}\n          </div>\n        </div>\n      );\n    }\n\n    return products.map((product) => (\n      <ProductSummaryCard key={product.id} product={product} />\n    ));\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"flex p-2 border-b-2\">\n        <div className=\"mr-8 font-bold\">Filters</div>\n        <div className=\"mr-4\">\n          <input\n            type=\"checkbox\"\n            className=\"mr-1\"\n            onChange={() => {\n              handleNewArrivalsChecked();\n              setFilterNewArrivalsFlag((val) => !val);\n            }}\n          />\n          <span className=\" text-sm font-semibold text-gray-600\">\n            New Arrivals\n          </span>\n        </div>\n        <div className=\"\">\n          <input\n            type=\"checkbox\"\n            className=\"mr-1\"\n            onChange={() => {\n              handleDiscountedItemsChecked();\n              setFilterDiscountedItemsFlag((val) => !val);\n            }}\n          />\n          <span className=\"text-sm font-semibold text-gray-600\">Deals</span>\n        </div>\n      </div>\n      <div className=\"flex-1\">\n        {renderOptionalSearchSection()}\n        {renderProductsList()}\n      </div>\n    </div>\n  );\n}\n\nexport default Products;\n","C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\Discounts.js",[],"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\settings.js",[],"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\components\\NewArrivals.js",[],"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\localStorage.js",[],"C:\\Users\\Asus\\Desktop\\assn_4_IT\\frontend\\src\\sessionStorage.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":3,"nodeType":"89","messageId":"90","endLine":3,"endColumn":7},{"ruleId":"87","severity":1,"message":"91","line":37,"column":16,"nodeType":"89","messageId":"90","endLine":37,"endColumn":23},{"ruleId":"87","severity":1,"message":"92","line":7,"column":20,"nodeType":"89","messageId":"90","endLine":7,"endColumn":31},{"ruleId":"87","severity":1,"message":"88","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"93","line":167,"column":10,"nodeType":"89","messageId":"90","endLine":167,"endColumn":18},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setCart' is assigned a value but never used.","'setActivity' is assigned a value but never used.","'activity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]